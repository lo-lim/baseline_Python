# 리스트의 슬라이싱
# 형식 :  리스트[ 시작 index : 끝 index ]
# 시작 index 부터 끝인덱스-1 까지 슬라이싱

s = ['자바','파이썬','오라클','스프링','텐스플로우']

# 인덱스 0~1번 원소 슬라이싱
print(s[0:2])               # ['자바', '파이썬']

# 인덱스 1~2번 원소 슬라이싱
print(s[1:3])               # ['파이썬', '오라클']

# 처음부터 인덱스 2번 원소까지 슬라이싱
print(s[:3])                # ['자바', '파이썬', '오라클']

# 인덱스 2번부터 끝까지 슬라이싱
print(s[2:])                # ['오라클', '스프링', '텐스플로우']

# 중첩 리스트에서 슬라이싱
s1 = [1, 2, 3, ['a', 'b', 'c'], 4, 5]

# 인덱스 2~4번까지 원소를 슬라이싱
print(s1[2 : 5])            # [3, ['a', 'b', 'c'], 4]

print(s1[3][:2])            # ['a', 'b']
#3번이 인덱싱이 된 상태에서 여기에서 0부터1까지만 추출함

import numpy as np #python에서 지원하는 library안에 있는 것 #numpy는 배열을 만들어주는 라이브러리(모듈)이다.
#한 가지 자료형의 자료만 저장할 수 있음. 즉 서로 다른 종류가 혼용이 안 됨.

s3 = [[1,2,3],[4,5,6],[7,8,8]]  #중첩리스트
    
a1 = np.array(s3)              #배열로 되어서 출력
print(a1)
print(type(a1))                #리스트가 아닌 배열이 속성이라고 뜸

#배열이랑 리스트도 둘 다 [를 사용해서 헷갈리는데 이럴 때는 type함수를 이용해서 속성을 확인할 수 있음
